{"version":3,"file":"static/js/933.6a29ce4a.chunk.js","mappings":"4LAEaA,E,QAAgBC,GAAAA,OAAH,8b,SCAbC,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OAAO,SAACH,EAAD,CAAeI,KAAK,SAApB,SAA8BD,GACxC,C,gFCFYE,E,QAAeJ,GAAAA,EAAH,mN,SCCZK,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OAAO,SAAC,KAAD,CAAcA,KAAMA,EAAMC,OAAQ,SAAAC,GAAO,OAAI,SAACJ,EAAD,UAAeI,GAAnB,GACnD,C,2ICFYC,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,scAiBVW,EAAQX,EAAAA,GAAAA,MAAH,+KAQLY,GAAQZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,2M,GAUUA,EAAAA,GAAAA,EAAH,mN,sCC7BnBc,EAAgB,CAClBR,KAAM,GACNS,MAAO,GACPC,SAAU,IAGRC,EAASC,EAAAA,KAAaC,MAAM,CAC9Bb,KAAMY,EAAAA,KAEDE,WACLL,MAAOG,EAAAA,KAEFH,MAAM,oBACNK,WACLJ,SAAUE,EAAAA,KAELG,IAAI,EAAG,+DACPC,IAAI,GAAI,yBACRF,aAGIG,EAAe,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MAUjB,OACI,SAAC,KAAD,CAAQX,cAAeA,EAAeY,SATrB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC5BJ,GAASK,EAAAA,EAAAA,IAASF,IACbG,SACAC,MAAK,kBAAMC,EAAAA,GAAAA,QAAA,8BAAN,IACLC,OAAM,kBAAMD,EAAAA,GAAAA,MAAY,2CAAlB,IACXJ,GACH,EAGiEM,iBAAkBjB,EAAhF,UACI,UAACR,EAAD,YACI,UAACE,EAAD,WAAO,QACH,SAACC,EAAD,CAAOT,KAAK,OAAOG,KAAK,UACxB,SAACD,EAAA,EAAD,CAAUC,KAAM,aAEpB,UAACK,EAAD,WAAO,SACH,SAACC,EAAD,CAAOT,KAAK,QAAQG,KAAK,WACzB,SAACD,EAAA,EAAD,CAAUC,KAAM,cAEpB,UAACK,EAAD,WAAO,YACH,SAACC,EAAD,CAAOT,KAAK,WAAWG,KAAK,cAC5B,SAACD,EAAA,EAAD,CAAUC,KAAM,iBAEpB,SAACL,EAAA,EAAD,UAAS,iBAIxB,ECxDD,EAFqB,kBAAM,SAACsB,EAAD,GAAN,C","sources":["components/AuthBtn/AuthBtn.styled.js","components/AuthBtn/AuthBtn.jsx","components/ErrorMsg/ErrorMsg.styled.js","components/ErrorMsg/ErrorMsg.jsx","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Registration/Registration.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledAuthBtn = styled.button`\n    padding: 10px 40px;\n    font-family: 'Courier New', Courier, monospace;\n    font-size:15px;\n    font-weight: 600;\n    background-color: transparent;\n    border-radius: 5px;\n    border: 1px solid #5b2a96;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1), background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover,:focus,:active{\n        background-color: #3b1d5e;\n        color: white;\n    }\n`;","import { StyledAuthBtn } from \"./AuthBtn.styled\"\n\nexport const AuthBtn = ({ children }) => {\n    return <StyledAuthBtn type=\"submit\">{children}</StyledAuthBtn>;\n};","import styled from \"styled-components\";\n\nexport const StyledErrMsg = styled.p`\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\n    color: red;\n    font-size:14px;\n    margin-top: 5px;\n    font-style: italic;\n    font-weight: 400;\n`;","import { ErrorMessage } from \"formik\"\nimport { StyledErrMsg } from \"./ErrorMsg.styled\"\n\nexport const ErrorMsg = ({ name }) => {\n    return <ErrorMessage name={name} render={message => <StyledErrMsg>{message}</StyledErrMsg>} />;\n};","import styled from 'styled-components';\nimport {Field, Form} from \"formik\";\n\nexport const StyledForm = styled(Form)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 72px 24px 72px 24px;\n    width: 400px;\n    \n    background-color: white;\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 2px 1px rgba(0, 0, 0, 0.2);\n    border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    font-family: 'Courier New', Courier, monospace;\n    font-weight: 600;\n    margin-bottom: 20px;\n`;\n\nexport const Input = styled(Field)`\n    font-family: 'Pangolin', cursive;\n    padding-left:15px;\n    font-size:15px;\n    width: 360px;\n    height: 30px;\n    border-radius: 25px;\n    border:1px solid #3b1d5e;\n`;\n\nexport const StyledErrMsg = styled.p`\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\n    color: red;\n    font-size:14px;\n    margin-top: 5px;\n    font-style: italic;\n    font-weight: 400;\n`;\n","import { Formik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport * as yup from 'yup';\nimport { register } from \"redux/auth/operations\";\nimport { Input, Label, StyledForm } from \"./RegisterForm.styled\";\nimport { AuthBtn } from \"components/AuthBtn/AuthBtn\";\nimport { ErrorMsg } from \"components/ErrorMsg/ErrorMsg\";\nimport { toast } from \"react-hot-toast\";\n\nconst initialValues = {\n    name: '',\n    email: '',\n    password: '',\n};\n\nconst schema = yup.object().shape({\n    name: yup\n        .string()\n        .required(),\n    email: yup\n        .string()\n        .email(\"Email is invalid\")\n        .required(),\n    password: yup\n        .string()\n        .min(7, \"Password is too short, it must contains at least 7 symbols!\")\n        .max(14, \"Password is too long!\")\n        .required(),\n});\n\nexport const RegisterForm = () => {\n    const dispatch = useDispatch();\n\n    const handleSubmit = (values, { resetForm }) => {\n        dispatch(register(values))\n            .unwrap()\n            .then(() => toast.success(`Registration is successful!`))\n            .catch(() => toast.error('Something went wrong. Try again, please!'));\n        resetForm();\n    };\n\n    return (\n        <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={schema}>\n            <StyledForm>\n                <Label>Name\n                    <Input type=\"text\" name=\"name\" />\n                    <ErrorMsg name={'name'} />\n                </Label>\n                <Label>Email\n                    <Input type=\"email\" name=\"email\" />\n                    <ErrorMsg name={'email'} />\n                </Label>\n                <Label>Password\n                    <Input type=\"password\" name=\"password\" />\n                    <ErrorMsg name={'password'} />\n                </Label>\n                <AuthBtn>Register</AuthBtn>\n            </StyledForm>\n        </Formik>\n    );\n};","import { RegisterForm } from \"components/RegisterForm/RegisterForm\";\n\nconst Registration = () => <RegisterForm />;\n\nexport default Registration;"],"names":["StyledAuthBtn","styled","AuthBtn","children","type","StyledErrMsg","ErrorMsg","name","render","message","StyledForm","Form","Label","Input","Field","initialValues","email","password","schema","yup","shape","required","min","max","RegisterForm","dispatch","useDispatch","onSubmit","values","resetForm","register","unwrap","then","toast","catch","validationSchema"],"sourceRoot":""}