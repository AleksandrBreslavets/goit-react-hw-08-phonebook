{"version":3,"file":"static/js/489.9a11752b.chunk.js","mappings":"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","sources":["components/ErrorMsg/ErrorMsg.styled.js","components/ErrorMsg/ErrorMsg.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledErrMsg = styled.p`\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\n    color: red;\n    font-size:14px;\n    margin-top: 5px;\n    font-style: italic;\n    font-weight: 400;\n`;","import { ErrorMessage } from \"formik\"\nimport { StyledErrMsg } from \"./ErrorMsg.styled\"\n\nexport const ErrorMsg = ({ name }) => {\n    return <ErrorMessage name={name} render={message => <StyledErrMsg>{message}</StyledErrMsg>} />;\n};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectVisibleContacts = createSelector([selectContacts, selectFilterValue], (contacts, filter) => {\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter.trim().toLowerCase()));\n});","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const FormWrap = styled(Form)`\n    margin-bottom: 40px;\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    font-family: 'Courier New', Courier, monospace;\n    font-weight: 600;\n    margin-bottom: 20px;\n`;\n\nexport const Input = styled(Field)`\n    font-family: 'Pangolin', cursive;\n    padding-left:15px;\n    font-size:20px;\n    width: 300px;\n    height: 30px;\n    border-radius: 25px;\n    border:none;\n`;\n\nexport const Button = styled.button`\n    padding: 10px 32px;\n    border-radius: 10px;\n    border: none;\n    font-family: 'Courier New', Courier, monospace;\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 1.19;\n    letter-spacing: 0.04em;\n    background-color: #5b2a96;\n    color: white;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover,:focus,:active{\n        background-color: #3b1d5e;\n    }\n`;","import toast from 'react-hot-toast';\nimport {Label, Input, Button, FormWrap} from \"./ContactForm.styled\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport {Formik } from 'formik';\nimport * as yup from 'yup';\nimport { ErrorMsg } from 'components/ErrorMsg/ErrorMsg';\n\nconst initialValues = {\n    name: '',\n    number: '',\n};\n\nconst schema = yup.object().shape({\n    name: yup\n        .string()\n        .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, \"Name may contain only letters, apostrophe, dash and spaces.For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\")\n        .trim()\n        .required(),\n    number: yup\n        .string()\n        .matches(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/, \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\")\n        .trim()\n        .required(),\n});\n\nexport const ContactForm = () => {\n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    const handleSubmit = (values, {resetForm}) => {\n        if (contacts.findIndex(contact => values.name === contact.name) === -1) {\n            dispatch(addContact(values));\n        }\n        else toast.error(`${values.name} is already in contacts`);\n        resetForm();\n    };\n    \n    return (\n            <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={schema}>\n                <FormWrap>\n                    <Label>Name\n                        <Input type=\"text\" name=\"name\" />\n                        <ErrorMsg name={'name'} />\n                    </Label>\n                    <Label>Number\n                        <Input type=\"tel\" name=\"number\" />\n                       <ErrorMsg name={'number'} /> \n                    </Label>\n                    <Button type=\"submit\">Add contact</Button>\n                </FormWrap>\n            </Formik>\n    );\n};","import styled from 'styled-components';\n\nexport const Label = styled.label`\n    display:flex;\n    flex-direction: column;\n    font-family: 'Courier New', Courier, monospace;\n    font-weight: 600;\n    font-size: 15px;\n`;\n\nexport const Input = styled.input`\n    width: 200px;\n    height: 30px;\n    border-radius: 10px;\n    border: none;\n`;","import { Label, Input } from \"./Filter.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFilterValue } from \"redux/contacts/selectors\";\nimport { setFilterValue } from \"redux/contacts/filterSlice\";\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    dispatch(setFilterValue(e.target.value));\n  };\n\n  return (\n    <Label>Find contacts by name\n      <Input\n        value={filter}\n        onChange={onFilterChange}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </Label>);\n};","import styled from 'styled-components';\n\nexport const Item = styled.li`\n    display:flex;\n    justify-content: space-between;\n    align-items: center;\n    &:not(:last-child){\n        margin-bottom: 15px;\n    }\n`;\n\nexport const ContactDetails = styled.p`\n    font-family: cursive;\n`;\n\nexport const Button = styled.button`\n    background-color: red;\n    color:white;\n    padding: 3px 10px;\n    border-radius: 10px;\n    border: none;\n    &:hover,:focus,:active{\n        background-color: #7d0101;\n    }\n`;","import PropTypes from \"prop-types\";\nimport { Item, ContactDetails, Button } from \"./ContactItem.styled\";\nimport { useDispatch} from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { useState } from \"react\";\n\nexport const ContactItem = ({ name, number, id }) => {\n    const dispatch = useDispatch();\n    const [deletedId, setDeletedId] = useState(null);\n\n    const handleDelete = idx => {\n        setDeletedId(idx);\n        dispatch(deleteContact(idx));\n    };\n\n    return (\n        <Item>\n            <ContactDetails>{name}: {number}</ContactDetails>\n            <Button disabled={deletedId===id} onClick={() => handleDelete(id)} type=\"button\">{deletedId === id ? \"Deleting...\" : \"Delete\"}</Button>\n        </Item>\n    );\n};\n\nContactItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n    background-color: white;\n    margin-top: 20px;\n    width: 400px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); \n    border-radius: 10px;\n    padding: 20px;\n`;","import { useSelector } from 'react-redux';\nimport {selectVisibleContacts } from 'redux/contacts/selectors';\nimport { ContactItem } from \"components/ContactItem/ContactItem\";\nimport { ContactsList } from \"./ContactList.styled\";\n\nexport const ContactList = () => {\n    const filteredContacts = useSelector(selectVisibleContacts);\n\n    if (filteredContacts.length) {\n        return (\n        <ContactsList>\n            {filteredContacts.map(({ name, number, id }) => <ContactItem\n                key={id}\n                name={name}\n                number={number}\n                id={id}>\n            </ContactItem>)}\n        </ContactsList>);\n    }\n    return null;\n};","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    padding: 40px;\n    height: 100vh;\n`;\n\nexport const MainTitle = styled.h1`\n    font-family: 'Oooh Baby', cursive;\n    margin-bottom: 20px;\n    font-size: 50px;\n\n`;\nexport const SectionTitle = styled.h2`\n    font-family: 'Oooh Baby', cursive;\n    font-size: 30px;\n    margin-bottom: 17px;\n\n`;\n\nexport const ErrorMsg = styled.p`\n    margin-top: 30px;\n    font-weight: 600;\n`;","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectError, selectIsLoading } from \"redux/contacts/selectors\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Container, ErrorMsg, MainTitle, SectionTitle} from \"./Contacts.styled\";\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <Container>\n            <MainTitle>Phonebook</MainTitle>\n            <ContactForm />\n            <SectionTitle>Contacts</SectionTitle>\n            <Filter />\n            <ContactList />\n            {isLoading && !error && <Loader />}\n            {error && <ErrorMsg>Something went wrong... Try to reload the page!</ErrorMsg>}\n        </Container>\n    );\n};\n\nexport default Contacts;"],"names":["StyledErrMsg","styled","ErrorMsg","name","render","message","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterValue","filter","selectVisibleContacts","toLowerCase","includes","trim","FormWrap","Form","Label","Input","Field","Button","initialValues","number","schema","yup","shape","matches","required","ContactForm","useSelector","dispatch","useDispatch","onSubmit","values","resetForm","contact","addContact","toast","validationSchema","type","Filter","onChange","e","setFilterValue","target","Item","ContactDetails","ContactItem","id","useState","deletedId","setDeletedId","disabled","onClick","idx","deleteContact","ContactsList","ContactList","filteredContacts","Container","MainTitle","SectionTitle","useEffect","fetchContacts","Loader"],"sourceRoot":""}